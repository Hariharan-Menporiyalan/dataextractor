-- Check if BATCH_JOB_INSTANCE table exists
IF NOT EXISTS (SELECT 1 FROM sys.tables WHERE name = 'BATCH_JOB_INSTANCE')
    CREATE TABLE dbo.BATCH_JOB_INSTANCE (
        JOB_INSTANCE_ID BIGINT NOT NULL PRIMARY KEY,
        VERSION BIGINT NULL,
        JOB_NAME VARCHAR(100) NOT NULL,
        JOB_KEY VARCHAR(32) NOT NULL,
        CONSTRAINT JOB_INST_UN UNIQUE (JOB_NAME, JOB_KEY)
    );
GO

-- Check if BATCH_JOB_EXECUTION table exists
IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'BATCH_JOB_EXECUTION')
    CREATE TABLE dbo.BATCH_JOB_EXECUTION  (
        JOB_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
        VERSION BIGINT NULL,
        JOB_INSTANCE_ID BIGINT NOT NULL,
        CREATE_TIME DATETIME NOT NULL,
        START_TIME DATETIME DEFAULT NULL ,
        END_TIME DATETIME DEFAULT NULL ,
        STATUS VARCHAR(10) NULL,
        EXIT_CODE VARCHAR(2500) NULL,
        EXIT_MESSAGE VARCHAR(2500) NULL,
        LAST_UPDATED DATETIME NULL,
        CONSTRAINT JOB_INST_EXEC_FK FOREIGN KEY (JOB_INSTANCE_ID)
        REFERENCES BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
    );
GO

-- Check if BATCH_JOB_EXECUTION_PARAMS table exists
IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'BATCH_JOB_EXECUTION_PARAMS')
    CREATE TABLE dbo.BATCH_JOB_EXECUTION_PARAMS  (
        JOB_EXECUTION_ID BIGINT NOT NULL ,
        PARAMETER_NAME VARCHAR(100) NOT NULL ,
        PARAMETER_TYPE VARCHAR(100) NOT NULL ,
        PARAMETER_VALUE VARCHAR(2500) ,
        IDENTIFYING CHAR(1) NOT NULL ,
        CONSTRAINT JOB_EXEC_PARAMS_FK FOREIGN KEY (JOB_EXECUTION_ID)
        REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
    );
GO

-- Check if BATCH_STEP_EXECUTION table exists
IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'BATCH_STEP_EXECUTION')
    CREATE TABLE dbo.BATCH_STEP_EXECUTION  (
        STEP_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
        VERSION BIGINT NOT NULL,
        STEP_NAME VARCHAR(100) NOT NULL,
        JOB_EXECUTION_ID BIGINT NOT NULL,
        CREATE_TIME DATETIME NOT NULL,
        START_TIME DATETIME DEFAULT NULL ,
        END_TIME DATETIME DEFAULT NULL ,
        STATUS VARCHAR(10) NULL,
        COMMIT_COUNT BIGINT NULL,
        READ_COUNT BIGINT NULL,
        FILTER_COUNT BIGINT NULL,
        WRITE_COUNT BIGINT NULL,
        READ_SKIP_COUNT BIGINT NULL,
        WRITE_SKIP_COUNT BIGINT NULL,
        PROCESS_SKIP_COUNT BIGINT NULL,
        ROLLBACK_COUNT BIGINT NULL,
        EXIT_CODE VARCHAR(2500) NULL,
        EXIT_MESSAGE VARCHAR(2500) NULL,
        LAST_UPDATED DATETIME NULL,
        CONSTRAINT JOB_EXEC_STEP_FK FOREIGN KEY (JOB_EXECUTION_ID)
        REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
    );
GO

-- Check if BATCH_STEP_EXECUTION_CONTEXT table exists
IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'BATCH_STEP_EXECUTION_CONTEXT')
    CREATE TABLE dbo.BATCH_STEP_EXECUTION_CONTEXT  (
        STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
        SHORT_CONTEXT VARCHAR(2500) NOT NULL,
        SERIALIZED_CONTEXT VARCHAR(MAX) NULL,
        CONSTRAINT STEP_EXEC_CTX_FK FOREIGN KEY (STEP_EXECUTION_ID)
        REFERENCES BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
    );
GO

-- Check if BATCH_JOB_EXECUTION_CONTEXT table exists
IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'BATCH_JOB_EXECUTION_CONTEXT')
    CREATE TABLE dbo.BATCH_JOB_EXECUTION_CONTEXT  (
        JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
        SHORT_CONTEXT VARCHAR(2500) NOT NULL,
        SERIALIZED_CONTEXT VARCHAR(MAX) NULL,
        CONSTRAINT JOB_EXEC_CTX_FK FOREIGN KEY (JOB_EXECUTION_ID)
        REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
    );
GO

-- Check if sequences already exist, create if they don't
IF NOT EXISTS (SELECT 1 FROM sys.sequences WHERE name = 'BATCH_STEP_EXECUTION_SEQ')
    CREATE SEQUENCE dbo.BATCH_STEP_EXECUTION_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NO CACHE NO CYCLE;
GO

IF NOT EXISTS (SELECT 1 FROM sys.sequences WHERE name = 'BATCH_JOB_EXECUTION_SEQ')
    CREATE SEQUENCE dbo.BATCH_JOB_EXECUTION_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NO CACHE NO CYCLE;
GO

IF NOT EXISTS (SELECT 1 FROM sys.sequences WHERE name = 'BATCH_JOB_SEQ')
    CREATE SEQUENCE dbo.BATCH_JOB_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NO CACHE NO CYCLE;
GO
